## Аннотация
В этом проекте вы создадите инструмент под названием creditcard Для:

Подтвердите номера кредитных карт.
Сгенерируйте возможные номера карт.
Получите информацию о марках карт и эмитентах.
Выдайте новые номера карт.


Кредитные карты используются для оплаты товаров и услуг. Каждая карта имеет уникальный номер, который помогает идентифицировать владельца карты и банк-эмитент. Номера кредитных карт длинные, чтобы гарантировать уникальность каждой карты. Например:

Visa использует 13- и 16-значные номера.
MasterCard использует 16-значные номера.
American Express использует 15-значные номера.
Эти числа не случайны. Они следуют определенным закономерностям:

Номера виз начинаются с 4.
Номера MasterCard начинаются с 51, 52, 53, 54 или 55.
Номера American Express начинаются с 34 или 37.
Номера кредитных карт также содержат "контрольную сумму", которая помогает обнаруживать ошибки. Это делается с помощью алгоритма Луна, простой математической формулы, которая проверяет, является ли число действительным.


## Обязательная Часть
### Проверка
В validate функция проверяет, действителен ли номер кредитной карты, используя алгоритм Луна.

Требования:

Номер должен состоять не менее чем из 13 цифр.
Если допустимо, выведите OK к стандартному выходу и завершению со статусом 0.
Если неверно, выведите INCORRECT перейти к stderr и выйти со статусом 1.
Поддержка передачи нескольких записей.
Поддержка --stdin установите флажок для передачи номера из stdin.
$ ./creditcard validate "4400430180300003"
OK
$ ./creditcard validate "4400430180300002"
INCORRECT
$ ./creditcard validate "4400430180300003" "4400430180300011"
OK
OK
$ echo "4400430180300003" | ./creditcard validate --stdin
OK
$ echo "4400430180300003" "4400430180300011" | ./creditcard validate --stdin
OK
OK
### Генерировать
В generate функция создает возможные номера кредитных карт, заменяя звездочки (*) цифрами.

Требования:

Замените до 4 звездочек (*) цифрами. Если больше - это ошибка. Звездочки должны быть в конце указанного номера кредитной карты.
Выведите сгенерированные числа в стандартный вывод.
Цифры должны быть напечатаны в порядке возрастания.
Завершите работу со статусом 1, если возникнет какая-либо ошибка.
Поддержка --pick отметьте, чтобы случайным образом выбрать одну запись.
$ ./creditcard generate "440043018030****"
4400430180300003
4400430180300011
4400430180300029
...
4400430180309988
4400430180309996
$ ./creditcard generate --pick "440043018030****"
4400430180304385
В случае ошибки:

$ ./creditcard generate --pick "44004301803*****"
$ echo $?
1
### Информация
В information функция предоставляет подробную информацию о карте на основе данных в brands.txt и issuers.txt.

Требования:

Выведите номер карты, срок действия, марку и эмитента.
Поддержка --stdin установите флажок для передачи номера из stdin.
Поддержка передачи нескольких записей.
$ ./creditcard information --brands=brands.txt --issuers=issuers.txt "4400430180300003"
4400430180300003
Correct: yes
Card Brand: VISA
Card Issuer: Kaspi Gold
В случае неправильного номера карты:

4400450180300003
Correct: no
Card Brand: -
Card Issuer: -
Пример содержания brands.txt:

VISA:4
MASTERCARD:51
MASTERCARD:52
MASTERCARD:53
MASTERCARD:54
MASTERCARD:55
AMEX:34
AMEX:37
Пример содержания issuers.txt:

Kaspi Gold:440043
Forte Black:404243
Forte Blue:517792
Halyk Bonus:440563
Jusan Pay:539545
Обратите внимание, что оба brands.txt и issuers.txt перечислите различные виды карточек, где каждая строка состоит из двух частей. Первая часть - это название вида, а вторая - числовой префикс (то есть цифры, с которых начинается карточка). Части разделены символом : символ (две точки).

### Проблема
В issue функция генерирует случайный действительный номер кредитной карты для указанного бренда и эмитента.

Требования:

Выберите случайное число для указанного бренда и эмитента.
Завершите работу со статусом 1, если возникнет какая-либо ошибка.
$ ./creditcard issue --brands=brands.txt --issuers=issuers.txt --brand=VISA --issuer="Kaspi Gold"
4400430180300003